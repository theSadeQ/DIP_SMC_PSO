Results of doctest builder run on 2025-09-20 16:36:21
=====================================================

Document: api/fault_detection/fdi
---------------------------------
1 items passed all tests:
   1 tests in default
1 tests in 1 items.
1 passed and 0 failed.
Test passed.

Document: api/utils/control_outputs
-----------------------------------
1 items passed all tests:
   1 tests in default
1 tests in 1 items.
1 passed and 0 failed.
Test passed.

Document: api/optimizer/pso_optimizer
-------------------------------------
**********************************************************************
File "api\optimizer\pso_optimizer.rst", line 20, in default
Failed example:
    config = load_config('config.yaml')
Exception raised:
    Traceback (most recent call last):
      File "D:\Projects\main\DIP_SMC_PSO\src\config.py", line 482, in load_config
        cfg = ConfigSchema()
              ^^^^^^^^^^^^^^
      File "C:\Users\sadeg\AppData\Roaming\Python\Python312\site-packages\pydantic_settings\main.py", line 188, in __init__
        super().__init__(
      File "C:\Users\sadeg\AppData\Roaming\Python\Python312\site-packages\pydantic\main.py", line 253, in __init__
        validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    pydantic_core._pydantic_core.ValidationError: 10 validation errors for ConfigSchema
    controller_defaults
      Field required [type=missing, input_value={}, input_type=dict]
        For further information visit https://errors.pydantic.dev/2.11/v/missing
    controllers
      Field required [type=missing, input_value={}, input_type=dict]
        For further information visit https://errors.pydantic.dev/2.11/v/missing
    pso
      Field required [type=missing, input_value={}, input_type=dict]
        For further information visit https://errors.pydantic.dev/2.11/v/missing
    physics
      Field required [type=missing, input_value={}, input_type=dict]
        For further information visit https://errors.pydantic.dev/2.11/v/missing
    physics_uncertainty
      Field required [type=missing, input_value={}, input_type=dict]
        For further information visit https://errors.pydantic.dev/2.11/v/missing
    simulation
      Field required [type=missing, input_value={}, input_type=dict]
        For further information visit https://errors.pydantic.dev/2.11/v/missing
    verification
      Field required [type=missing, input_value={}, input_type=dict]
        For further information visit https://errors.pydantic.dev/2.11/v/missing
    cost_function
      Field required [type=missing, input_value={}, input_type=dict]
        For further information visit https://errors.pydantic.dev/2.11/v/missing
    sensors
      Field required [type=missing, input_value={}, input_type=dict]
        For further information visit https://errors.pydantic.dev/2.11/v/missing
    hil
      Field required [type=missing, input_value={}, input_type=dict]
        For further information visit https://errors.pydantic.dev/2.11/v/missing

    The above exception was the direct cause of the following exception:

    Traceback (most recent call last):
      File "C:\Program Files\Python312\Lib\doctest.py", line 1368, in __run
        exec(compile(example.source, filename, "single",
      File "<doctest default[3]>", line 1, in <module>
        config = load_config('config.yaml')
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
      File "D:\Projects\main\DIP_SMC_PSO\src\config.py", line 528, in load_config
        raise InvalidConfigurationError(
    src.config.InvalidConfigurationError: Configuration validation failed:
      - controller_defaults: Field required
      - controllers: Field required
      - pso: Field required
      - physics: Field required
      - physics_uncertainty: Field required
      - simulation: Field required
      - verification: Field required
      - cost_function: Field required
      - sensors: Field required
      - hil: Field required
**********************************************************************
File "api\optimizer\pso_optimizer.rst", line 21, in default
Failed example:
    tuner = PSOTuner(controller_factory, config, seed=42)
Exception raised:
    Traceback (most recent call last):
      File "C:\Program Files\Python312\Lib\doctest.py", line 1368, in __run
        exec(compile(example.source, filename, "single",
      File "<doctest default[4]>", line 1, in <module>
        tuner = PSOTuner(controller_factory, config, seed=42)
                                             ^^^^^^
    NameError: name 'config' is not defined
**********************************************************************
File "api\optimizer\pso_optimizer.rst", line 24, in default
Failed example:
    result = tuner.optimise(iters_override=10, n_particles_override=20)
Exception raised:
    Traceback (most recent call last):
      File "C:\Program Files\Python312\Lib\doctest.py", line 1368, in __run
        exec(compile(example.source, filename, "single",
      File "<doctest default[5]>", line 1, in <module>
        result = tuner.optimise(iters_override=10, n_particles_override=20)
                 ^^^^^
    NameError: name 'tuner' is not defined. Did you mean: 'super'?
**********************************************************************
File "api\optimizer\pso_optimizer.rst", line 25, in default
Failed example:
    result['best_cost'] > 0  # Should find a valid cost
Exception raised:
    Traceback (most recent call last):
      File "C:\Program Files\Python312\Lib\doctest.py", line 1368, in __run
        exec(compile(example.source, filename, "single",
      File "<doctest default[6]>", line 1, in <module>
        result['best_cost'] > 0  # Should find a valid cost
        ^^^^^^
    NameError: name 'result' is not defined
**********************************************************************
1 items had failures:
   4 of   7 in default
7 tests in 1 items.
3 passed and 4 failed.
***Test Failed*** 4 failures.

Document: api/benchmarks/statistical_benchmarks
-----------------------------------------------
1 items passed all tests:
   1 tests in default
1 tests in 1 items.
1 passed and 0 failed.
Test passed.

Document: api/core/protocols
----------------------------
1 items passed all tests:
   1 tests in default
1 tests in 1 items.
1 passed and 0 failed.
Test passed.

Document: api/utils/visualization
---------------------------------
1 items passed all tests:
   1 tests in default
1 tests in 1 items.
1 passed and 0 failed.
Test passed.

Document: api/core/adaptive_integrator
--------------------------------------
1 items passed all tests:
   1 tests in default
1 tests in 1 items.
1 passed and 0 failed.
Test passed.

Document: api/controllers/swing_up_smc
--------------------------------------
**********************************************************************
File "api\controllers\swing_up_smc.rst", line 14, in default
Failed example:
    controller = SwingUpSMC()
Exception raised:
    Traceback (most recent call last):
      File "C:\Program Files\Python312\Lib\doctest.py", line 1368, in __run
        exec(compile(example.source, filename, "single",
      File "<doctest default[1]>", line 1, in <module>
        controller = SwingUpSMC()
                     ^^^^^^^^^^^^
    TypeError: SwingUpSMC.__init__() missing 2 required positional arguments: 'dynamics_model' and 'stabilizing_controller'
**********************************************************************
1 items had failures:
   1 of   2 in default
2 tests in 1 items.
1 passed and 1 failed.
***Test Failed*** 1 failures.

Document: api/core/simulation_context
-------------------------------------
1 items passed all tests:
   1 tests in default
1 tests in 1 items.
1 passed and 0 failed.
Test passed.

Document: api/controllers/sta_smc
---------------------------------
**********************************************************************
File "api\controllers\sta_smc.rst", line 12, in default
Failed example:
    from src.controllers.sta_smc import STASMC
Exception raised:
    Traceback (most recent call last):
      File "C:\Program Files\Python312\Lib\doctest.py", line 1368, in __run
        exec(compile(example.source, filename, "single",
      File "<doctest default[0]>", line 1, in <module>
        from src.controllers.sta_smc import STASMC
    ImportError: cannot import name 'STASMC' from 'src.controllers.sta_smc' (D:\Projects\main\DIP_SMC_PSO\src\controllers\sta_smc.py)
**********************************************************************
File "api\controllers\sta_smc.rst", line 15, in default
Failed example:
    controller = STASMC()
Exception raised:
    Traceback (most recent call last):
      File "C:\Program Files\Python312\Lib\doctest.py", line 1368, in __run
        exec(compile(example.source, filename, "single",
      File "<doctest default[2]>", line 1, in <module>
        controller = STASMC()
                     ^^^^^^
    NameError: name 'STASMC' is not defined
**********************************************************************
File "api\controllers\sta_smc.rst", line 19, in default
Failed example:
    controller = STASMC(gains)
Exception raised:
    Traceback (most recent call last):
      File "C:\Program Files\Python312\Lib\doctest.py", line 1368, in __run
        exec(compile(example.source, filename, "single",
      File "<doctest default[4]>", line 1, in <module>
        controller = STASMC(gains)
                     ^^^^^^
    NameError: name 'STASMC' is not defined
**********************************************************************
1 items had failures:
   3 of   5 in default
5 tests in 1 items.
2 passed and 3 failed.
***Test Failed*** 3 failures.

Document: api/controllers/hybrid_adaptive_sta_smc
-------------------------------------------------
**********************************************************************
File "api\controllers\hybrid_adaptive_sta_smc.rst", line 15, in default
Failed example:
    controller = HybridAdaptiveSTASMC()
Exception raised:
    Traceback (most recent call last):
      File "C:\Program Files\Python312\Lib\doctest.py", line 1368, in __run
        exec(compile(example.source, filename, "single",
      File "<doctest default[2]>", line 1, in <module>
        controller = HybridAdaptiveSTASMC()
                     ^^^^^^^^^^^^^^^^^^^^^^
    TypeError: HybridAdaptiveSTASMC.__init__() missing 8 required positional arguments: 'gains', 'dt', 'max_force', 'k1_init', 'k2_init', 'gamma1', 'gamma2', and 'dead_zone'
**********************************************************************
File "api\controllers\hybrid_adaptive_sta_smc.rst", line 19, in default
Failed example:
    controller = HybridAdaptiveSTASMC(gains)
Exception raised:
    Traceback (most recent call last):
      File "C:\Program Files\Python312\Lib\doctest.py", line 1368, in __run
        exec(compile(example.source, filename, "single",
      File "<doctest default[4]>", line 1, in <module>
        controller = HybridAdaptiveSTASMC(gains)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    TypeError: HybridAdaptiveSTASMC.__init__() missing 7 required positional arguments: 'dt', 'max_force', 'k1_init', 'k2_init', 'gamma1', 'gamma2', and 'dead_zone'
**********************************************************************
1 items had failures:
   2 of   5 in default
5 tests in 1 items.
3 passed and 2 failed.
***Test Failed*** 2 failures.

Document: api/core/dynamics_lowrank
-----------------------------------
1 items passed all tests:
   3 tests in default
3 tests in 1 items.
3 passed and 0 failed.
Test passed.

Document: api/controllers/mpc_controller
----------------------------------------
1 items passed all tests:
   1 tests in default
1 tests in 1 items.
1 passed and 0 failed.
Test passed.

Document: api/controllers/adaptive_smc
--------------------------------------
**********************************************************************
File "api\controllers\adaptive_smc.rst", line 15, in default
Failed example:
    controller = AdaptiveSMC()
Exception raised:
    Traceback (most recent call last):
      File "C:\Program Files\Python312\Lib\doctest.py", line 1368, in __run
        exec(compile(example.source, filename, "single",
      File "<doctest default[2]>", line 1, in <module>
        controller = AdaptiveSMC()
                     ^^^^^^^^^^^^^
    TypeError: AdaptiveSMC.__init__() missing 10 required positional arguments: 'gains', 'dt', 'max_force', 'leak_rate', 'adapt_rate_limit', 'K_min', 'K_max', 'smooth_switch', 'boundary_layer', and 'dead_zone'
**********************************************************************
File "api\controllers\adaptive_smc.rst", line 19, in default
Failed example:
    controller = AdaptiveSMC(gains)
Exception raised:
    Traceback (most recent call last):
      File "C:\Program Files\Python312\Lib\doctest.py", line 1368, in __run
        exec(compile(example.source, filename, "single",
      File "<doctest default[4]>", line 1, in <module>
        controller = AdaptiveSMC(gains)
                     ^^^^^^^^^^^^^^^^^^
    TypeError: AdaptiveSMC.__init__() missing 9 required positional arguments: 'dt', 'max_force', 'leak_rate', 'adapt_rate_limit', 'K_min', 'K_max', 'smooth_switch', 'boundary_layer', and 'dead_zone'
**********************************************************************
1 items had failures:
   2 of   5 in default
5 tests in 1 items.
3 passed and 2 failed.
***Test Failed*** 2 failures.

Document: api/utils/seed
------------------------
1 items passed all tests:
  10 tests in default
10 tests in 1 items.
10 passed and 0 failed.
Test passed.

Document: api/controllers/classical_smc
---------------------------------------
**********************************************************************
File "api\controllers\classical_smc.rst", line 15, in default
Failed example:
    controller = ClassicalSMC()
Exception raised:
    Traceback (most recent call last):
      File "C:\Program Files\Python312\Lib\doctest.py", line 1368, in __run
        exec(compile(example.source, filename, "single",
      File "<doctest default[2]>", line 1, in <module>
        controller = ClassicalSMC()
                     ^^^^^^^^^^^^^^
    TypeError: ClassicalSMC.__init__() missing 3 required positional arguments: 'gains', 'max_force', and 'boundary_layer'
**********************************************************************
File "api\controllers\classical_smc.rst", line 19, in default
Failed example:
    controller = ClassicalSMC(gains)
Exception raised:
    Traceback (most recent call last):
      File "C:\Program Files\Python312\Lib\doctest.py", line 1368, in __run
        exec(compile(example.source, filename, "single",
      File "<doctest default[4]>", line 1, in <module>
        controller = ClassicalSMC(gains)
                     ^^^^^^^^^^^^^^^^^^^
    TypeError: ClassicalSMC.__init__() missing 2 required positional arguments: 'max_force' and 'boundary_layer'
**********************************************************************
File "api\controllers\classical_smc.rst", line 22, in default
Failed example:
    controller.n_gains
Exception raised:
    Traceback (most recent call last):
      File "C:\Program Files\Python312\Lib\doctest.py", line 1368, in __run
        exec(compile(example.source, filename, "single",
      File "<doctest default[5]>", line 1, in <module>
        controller.n_gains
        ^^^^^^^^^^
    NameError: name 'controller' is not defined
**********************************************************************
1 items had failures:
   3 of   6 in default
6 tests in 1 items.
3 passed and 3 failed.
***Test Failed*** 3 failures.

Document: api/core/numba_utils
------------------------------
1 items passed all tests:
   1 tests in default
1 tests in 1 items.
1 passed and 0 failed.
Test passed.

Document: api/core/dynamics
---------------------------
**********************************************************************
File "api\core\dynamics.rst", line 15, in default
Failed example:
    params = DIPParams()
Exception raised:
    Traceback (most recent call last):
      File "C:\Program Files\Python312\Lib\doctest.py", line 1368, in __run
        exec(compile(example.source, filename, "single",
      File "<doctest default[2]>", line 1, in <module>
        params = DIPParams()
                 ^^^^^^^^^^^
    TypeError: DIPParams.__new__() missing 13 required positional arguments: 'cart_mass', 'pendulum1_mass', 'pendulum2_mass', 'pendulum1_length', 'pendulum2_length', 'pendulum1_com', 'pendulum2_com', 'pendulum1_inertia', 'pendulum2_inertia', 'gravity', 'cart_friction', 'joint1_friction', and 'joint2_friction'
**********************************************************************
File "api\core\dynamics.rst", line 16, in default
Failed example:
    model = DoubleInvertedPendulum(params)
Exception raised:
    Traceback (most recent call last):
      File "C:\Program Files\Python312\Lib\doctest.py", line 1368, in __run
        exec(compile(example.source, filename, "single",
      File "<doctest default[3]>", line 1, in <module>
        model = DoubleInvertedPendulum(params)
                                       ^^^^^^
    NameError: name 'params' is not defined
**********************************************************************
File "api\core\dynamics.rst", line 21, in default
Failed example:
    x_dot = model.dynamics(0.0, state, u)
Exception raised:
    Traceback (most recent call last):
      File "C:\Program Files\Python312\Lib\doctest.py", line 1368, in __run
        exec(compile(example.source, filename, "single",
      File "<doctest default[6]>", line 1, in <module>
        x_dot = model.dynamics(0.0, state, u)
                ^^^^^
    NameError: name 'model' is not defined
**********************************************************************
File "api\core\dynamics.rst", line 22, in default
Failed example:
    len(x_dot) == 4
Exception raised:
    Traceback (most recent call last):
      File "C:\Program Files\Python312\Lib\doctest.py", line 1368, in __run
        exec(compile(example.source, filename, "single",
      File "<doctest default[7]>", line 1, in <module>
        len(x_dot) == 4
            ^^^^^
    NameError: name 'x_dot' is not defined
**********************************************************************
1 items had failures:
   4 of   8 in default
8 tests in 1 items.
4 passed and 4 failed.
***Test Failed*** 4 failures.

Document: api/controllers/factory
---------------------------------
**********************************************************************
File "api\controllers\factory.rst", line 14, in default
Failed example:
    controller = create_controller('classical_smc')
Exception raised:
    Traceback (most recent call last):
      File "C:\Program Files\Python312\Lib\doctest.py", line 1368, in __run
        exec(compile(example.source, filename, "single",
      File "<doctest default[1]>", line 1, in <module>
        controller = create_controller('classical_smc')
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      File "D:\Projects\main\DIP_SMC_PSO\src\controllers\factory.py", line 1083, in create_controller
        raise ValueError(f"Controller '{name}': gains parameter is required")
    ValueError: Controller 'classical_smc': gains parameter is required
**********************************************************************
1 items had failures:
   1 of   2 in default
2 tests in 1 items.
1 passed and 1 failed.
***Test Failed*** 1 failures.

Document: api/utils/statistics
------------------------------
1 items passed all tests:
   1 tests in default
1 tests in 1 items.
1 passed and 0 failed.
Test passed.

Document: api/core/simulation_runner
------------------------------------
**********************************************************************
File "api\core\simulation_runner.rst", line 12, in default
Failed example:
    from src.core.simulation_runner import SimulationRunner
Exception raised:
    Traceback (most recent call last):
      File "C:\Program Files\Python312\Lib\doctest.py", line 1368, in __run
        exec(compile(example.source, filename, "single",
      File "<doctest default[0]>", line 1, in <module>
        from src.core.simulation_runner import SimulationRunner
    ImportError: cannot import name 'SimulationRunner' from 'src.core.simulation_runner' (D:\Projects\main\DIP_SMC_PSO\src\core\simulation_runner.py)
**********************************************************************
File "api\core\simulation_runner.rst", line 18, in default
Failed example:
    controller = ClassicalSMC()
Exception raised:
    Traceback (most recent call last):
      File "C:\Program Files\Python312\Lib\doctest.py", line 1368, in __run
        exec(compile(example.source, filename, "single",
      File "<doctest default[4]>", line 1, in <module>
        controller = ClassicalSMC()
                     ^^^^^^^^^^^^^^
    TypeError: ClassicalSMC.__init__() missing 3 required positional arguments: 'gains', 'max_force', and 'boundary_layer'
**********************************************************************
File "api\core\simulation_runner.rst", line 19, in default
Failed example:
    params = DIPParams()
Exception raised:
    Traceback (most recent call last):
      File "C:\Program Files\Python312\Lib\doctest.py", line 1368, in __run
        exec(compile(example.source, filename, "single",
      File "<doctest default[5]>", line 1, in <module>
        params = DIPParams()
                 ^^^^^^^^^^^
    TypeError: DIPParams.__new__() missing 13 required positional arguments: 'cart_mass', 'pendulum1_mass', 'pendulum2_mass', 'pendulum1_length', 'pendulum2_length', 'pendulum1_com', 'pendulum2_com', 'pendulum1_inertia', 'pendulum2_inertia', 'gravity', 'cart_friction', 'joint1_friction', and 'joint2_friction'
**********************************************************************
File "api\core\simulation_runner.rst", line 20, in default
Failed example:
    dynamics = DoubleInvertedPendulum(params)
Exception raised:
    Traceback (most recent call last):
      File "C:\Program Files\Python312\Lib\doctest.py", line 1368, in __run
        exec(compile(example.source, filename, "single",
      File "<doctest default[6]>", line 1, in <module>
        dynamics = DoubleInvertedPendulum(params)
                                          ^^^^^^
    NameError: name 'params' is not defined
**********************************************************************
File "api\core\simulation_runner.rst", line 23, in default
Failed example:
    runner = SimulationRunner(dynamics, controller)
Exception raised:
    Traceback (most recent call last):
      File "C:\Program Files\Python312\Lib\doctest.py", line 1368, in __run
        exec(compile(example.source, filename, "single",
      File "<doctest default[7]>", line 1, in <module>
        runner = SimulationRunner(dynamics, controller)
                 ^^^^^^^^^^^^^^^^
    NameError: name 'SimulationRunner' is not defined
**********************************************************************
File "api\core\simulation_runner.rst", line 24, in default
Failed example:
    runner is not None
Exception raised:
    Traceback (most recent call last):
      File "C:\Program Files\Python312\Lib\doctest.py", line 1368, in __run
        exec(compile(example.source, filename, "single",
      File "<doctest default[8]>", line 1, in <module>
        runner is not None
        ^^^^^^
    NameError: name 'runner' is not defined
**********************************************************************
1 items had failures:
   6 of   9 in default
9 tests in 1 items.
3 passed and 6 failed.
***Test Failed*** 6 failures.

Document: api/core/safety_guards
--------------------------------

Document: api/utils/logging_config
----------------------------------
**********************************************************************
File "api\utils\logging_config.rst", line 12, in default
Failed example:
    from src.logging_config import setup_logging
Exception raised:
    Traceback (most recent call last):
      File "C:\Program Files\Python312\Lib\doctest.py", line 1368, in __run
        exec(compile(example.source, filename, "single",
      File "<doctest default[0]>", line 1, in <module>
        from src.logging_config import setup_logging
    ImportError: cannot import name 'setup_logging' from 'src.logging_config' (D:\Projects\main\DIP_SMC_PSO\src\logging_config.py)
**********************************************************************
File "api\utils\logging_config.rst", line 14, in default
Failed example:
    setup_logging()
Exception raised:
    Traceback (most recent call last):
      File "C:\Program Files\Python312\Lib\doctest.py", line 1368, in __run
        exec(compile(example.source, filename, "single",
      File "<doctest default[1]>", line 1, in <module>
        setup_logging()
        ^^^^^^^^^^^^^
    NameError: name 'setup_logging' is not defined
**********************************************************************
1 items had failures:
   2 of   2 in default
2 tests in 1 items.
0 passed and 2 failed.
***Test Failed*** 2 failures.

Document: api/utils/control_analysis
------------------------------------
1 items passed all tests:
   1 tests in default
1 tests in 1 items.
1 passed and 0 failed.
Test passed.

Document: api/utils/latency_monitor
-----------------------------------
1 items passed all tests:
   1 tests in default
1 tests in 1 items.
1 passed and 0 failed.
Test passed.

Document: api/utils/control_primitives
--------------------------------------
1 items passed all tests:
   1 tests in default
1 tests in 1 items.
1 passed and 0 failed.
Test passed.

Document: api/core/vector_sim
-----------------------------
1 items passed all tests:
  13 tests in default
13 tests in 1 items.
13 passed and 0 failed.
Test passed.

Doctest summary
===============
   90 tests
   28 failures in tests
    0 failures in setup code
    0 failures in cleanup code
