*** a/src/controllers/factory.py
--- b/src/controllers/factory.py
***************
*** 1,20 ****
  # (context omitted)
--- 1,20 ----
  # (context omitted)

***************
*** 0,0 ****
--- 0,0 ----
+ # NOTE: this patch flips tolerant imports to prefer src.controllers first.

***************
*** 0,0 ****
--- 0,0 ----
+ # Classical SMC
+ -ClassicalSMC      = _try_import("controllers.classic_smc", "src.controllers.classic_smc", "ClassicalSMC")
+ +ClassicalSMC      = _try_import("src.controllers.classic_smc", "controllers.classic_smc", "ClassicalSMC")
+
+ # Super Twisting (STA)
+ -SuperTwistingSMC  = _try_import("controllers.sta_smc", "src.controllers.sta_smc", "SuperTwistingSMC")
+ +SuperTwistingSMC  = _try_import("src.controllers.sta_smc", "controllers.sta_smc", "SuperTwistingSMC")
+
+ # Adaptive SMC
+ -AdaptiveSMC       = _try_import("controllers.adaptive_smc", "src.controllers.adaptive_smc", "AdaptiveSMC")
+ +AdaptiveSMC       = _try_import("src.controllers.adaptive_smc", "controllers.adaptive_smc", "AdaptiveSMC")
+
+ # Swing-up SMC
+ -SwingUpSMC        = _try_import("controllers.swing_up_smc", "src.controllers.swing_up_smc", "SwingUpSMC")
+ +SwingUpSMC        = _try_import("src.controllers.swing_up_smc", "controllers.swing_up_smc", "SwingUpSMC")
+
+ # MPC
+ -MPCController     = _try_import("controllers.mpc_controller", "src.controllers.mpc_controller", "MPCController")
+ -MPCWeights        = _try_import("controllers.mpc_controller", "src.controllers.mpc_controller", "MPCWeights")
+ +MPCController     = _try_import("src.controllers.mpc_controller", "controllers.mpc_controller", "MPCController")
+ +MPCWeights        = _try_import("src.controllers.mpc_controller", "controllers.mpc_controller", "MPCWeights")
+
+ # Hybrid Adaptive STA-SMC
+ -HybridAdaptiveSTASMC = _try_import("controllers.hybrid_adaptive_sta_smc",
+ -                                   "src.controllers.hybrid_adaptive_sta_smc",
+ -                                   "HybridAdaptiveSTASMC")
+ +HybridAdaptiveSTASMC = _try_import("src.controllers.hybrid_adaptive_sta_smc",
+ +                                   "controllers.hybrid_adaptive_sta_smc",
+ +                                   "HybridAdaptiveSTASMC")
