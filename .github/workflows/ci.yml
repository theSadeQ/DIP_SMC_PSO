name: CI
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ "**" ]
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true
jobs:
  test:
    name: pytest (${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.10", "3.11", "3.12" ]
    env:
      PYTHONHASHSEED: "0"
      MPLBACKEND: Agg
      MPLCONFIGDIR: ${{ runner.temp }}/mplconfig
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml', '**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
      - name: Install
        run: |
          python -m pip install --upgrade pip
          if [ -f pyproject.toml ]; then
            pip install -e .[test] || pip install -e .
          else
            pip install -e .
          fi
          pip install pytest pytest-cov coverage
      - name: Pytest with coverage
        run: |
          mkdir -p artifacts
          set -o pipefail
          pytest -ra \
            --cov=src --cov-report=term-missing \
            --cov-report=xml:artifacts/coverage-${{ matrix.python-version }}.xml \
            --junitxml=artifacts/pytest-${{ matrix.python-version }}.junit.xml \
            | tee artifacts/pytest-${{ matrix.python-version }}.log
      - name: Save raw coverage data
        run: |
          if [ -f .coverage ]; then mv .coverage artifacts/.coverage.${{ matrix.python-version }}; fi
      - uses: actions/upload-artifact@v4
        with:
          name: test-artifacts-${{ matrix.python-version }}
          path: |
            artifacts/coverage-${{ matrix.python-version }}.xml
            artifacts/pytest-${{ matrix.python-version }}.junit.xml
            artifacts/pytest-${{ matrix.python-version }}.log
            artifacts/.coverage.${{ matrix.python-version }}
  coverage-combine:
    name: coverage combine & gate
    needs: [ test ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true
      - name: Combine coverage
        run: |
          python -m pip install coverage
          ls -la artifacts
          find artifacts -name ".coverage.*" -exec cp {} . \;
          python -m coverage combine
          python -m coverage xml -o coverage.xml
          python -m coverage report --fail-under=0
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-merged
          path: coverage.xml